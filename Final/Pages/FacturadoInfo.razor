@page "/FacturadoInfo"
@using Final.Data
@inject PFacturadoService Servicio


<NavLink class="nav-link" href="AddFacturado">
    <span class="oi oi-plus" aria-hidden="true"></span>&nbsp; Agregar Producto Facturado

</NavLink>

<h3>Listado de Productos Facturados</h3>

@if (factura == null)
{
    <p><em>No hay Productos Facturados.....</em></p>

}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ProductoFacturadoId</th>
                <th>Nombre</th>               
                <th>Cantidad</th>                
                <th>Descripcion</th>
                <th>IdFactura</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prop in factura)
            {
                <tr>
                    <td>@prop.IdProducto_Facturados</td>
                    <td>@prop.Nombre</td>
                    <td>@prop.Cantidad</td>
                    <td>@prop.Descripcion</td>
                    <td>@prop.Id_Factura</td>                    
                    <td>
                        <a class="nav-link" href="EditFacturado/@prop.IdProducto_Facturados">
                            <span class="oi oi-pencil" aria-hidden="true"></span>Editar
                        </a>
                        <a class="nav-link" href="DeletePropFacturado/@prop.IdProducto_Facturados">
                            <span class="oi oi-trash" aria-hidden="true"></span>Borrar
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
}




@code {

    List<Producto_Facturado> factura = new List<Producto_Facturado>();

    protected override async Task OnInitializedAsync()
    {
        factura = await Task.Run(() => Servicio.GetProductoFacturado());

    }

}
