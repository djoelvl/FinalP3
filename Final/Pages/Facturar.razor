@page "/Facturar"
@using Final.Data
@using Microsoft.AspNetCore.Identity
@inject ProductoService Service
@inject ClienteService ServiceCl
@inject FacturaService ServiceF
@inject PFacturadoService ServiceProductoF
@inject NavigationManager NavigationManager
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager



@if (carr1 == 0 )
{
    @if(principal1 == 1){
    <label for=""></label>
 <select class="form-control" @bind="clientess">
<option value="">Seleccione un cliente</option>

            @foreach(var cl in client)
            {
           
<option value="@cl.Nombre">@cl.Nombre</option>

            }

            
            </select>    <br>
            <br>

           <button type="button" @onclick="getidclient" class="btn btn-primary    oi oi-cart">Seleccionar cliente</button><br><br>


}
            if ((clientess != "") && (carr == 2))
            {
                <button type="button" @onclick="@carrito" class="btn btn-primary    oi oi-cart">Habilitar carrito</button><br><br>
                @idcliente;
                <br><br>
                @userId;
                <br><br>
                @idfact;

            }
            else{
                <h1>Seleccione un cliente</h1>
            }

    
           
}

else if(carr1 == 1)
{
                  @idfact;

    <button type="button" @onclick="@BorrarFactura" class="btn btn-danger    oi oi-cart">Deshabilitar carrito</button><br><br>
}
         
@if (carr==1)
{
    

@if (product != null)
{
    <label for="">Seleccione el producto que desea comprar</label><br>
       <select class="form-control" @bind="selected">
<option value="">Seleccione producto</option>
            @foreach(var prop in product)
            {
           @if(prop.Cantidad > 0){
<option value="@prop.Nombre">@prop.Nombre</option>
}
            }

          
            </select>    <br>
            <br>
            @curId;
            <br>
                        @foreach(var prop in product)
            {
              @if(prop.Nombre == selected){
                <b>Cantidad de @prop.Nombre disponibles: @prop.Cantidad</b>
              }
           

            }
            
            <br>
            <br>
                <label for="">Seleccione la cantidad que desea comprar</label><br>
                <input type="number"class="form-control" @bind="canti">
                <br>
                <br>
              <input type="button" class="btn btn-success    oi oi-cart" @onclick="@AgregarPfacturado" value="AÃ±adir al carrito">
                
                <br><br><br><br><br>
                
                <br>

                <h3>Productos y servicios en su carrito: </h3> 
                <table class="table">
  <thead class="thead-dark">
    <tr>
      <th scope="col">Nombre</th>
      <th scope="col">Cantidad</th>
      <th scope="col">Descripcion</th> 
     
    </tr>
  </thead> 
  <tbody>
    @foreach (var item in prodfact)
      {
        @if(item.Id_Factura == idfact){
    <tr>
      
          <th>@item.Nombre</th>
          <th>@item.Cantidad</th>
          <th>@item.Descripcion</th>
      
      
    </tr>
    } 
    }
  </tbody>
</table>
         
         <br><br>

                        <a class="nav-link" href="deletfact/@curId">
                            <span class="oi oi-trash" aria-hidden="true">Borrar</span>
                                                 </a> 
                                         
                      <a class="nav-link" href="EditFact/@curId">
                            <span class="oi oi-check" aria-hidden="true">Confirmar factura</span>
                           </a>

                }


         
else{
    <h1>No hay productos ni servicios disponibles</h1>
}
         
         
}
else if((carr == 0) && (idcliente != 0)){
    <h1>Habilite el carrito</h1>
}

         


@code {

  int idcliente;
string selected;
string clientess;
int canti;
int carr;
int principal1 = 1;
int carr1 = 0;
int idfact;
string descr;

string  curId;
int money;
private Guid userId;

AppUser user = new AppUser();
Factura facturas = new Factura();


Producto_Facturado pfacturado = new Producto_Facturado();


[CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

       List<Producto> product = new List<Producto>();

       List<ClienteFinal> client = new List<ClienteFinal>();
                 List<Producto_Facturado> prodfact = new List<Producto_Facturado>();


    protected override async Task OnInitializedAsync()
    {
        product = await Task.Run(() => Service.GetProductos());
         client = await Task.Run(() => ServiceCl.GetClientes());

         prodfact = await Task.Run(() => ServiceProductoF.GetProductoFacturado());


         var authState = await authenticationStateTask;
        user = await UserManager.GetUserAsync(authState.User);
        userId = user.Uid;
    }



    
protected void carrito(){
    carr = 1;
    carr1 = 1;
    principal1 = 2;
 

Console.WriteLine("inicio");
       
       facturas.Nombre_Producto = "";
       facturas.Nombre_Servicio = "";
       facturas.Cantidad_Prod = 0;
       facturas.Cantidad_Serv = 0;
       facturas.Monto_Total = 0;
       facturas.Itbis = 0;
       facturas.FechaYHora= "";
       facturas.Cliente_Id = idcliente;
       facturas.Uid = userId;
              Console.WriteLine("casi");

       ServiceF.Create(facturas);
       idfact = facturas.Id_Factura;

       Console.WriteLine("guardado");
       curId = idfact.ToString();


}
protected void dcarrito(){
    
 

 
}

protected void BorrarFactura(){
carr = 0;
    carr1 = 0;
    principal1 = 1;

ServiceF.DeleteFactura(facturas); 
}



void getidclient(){
carr = 2;
    principal1 = 2;

 foreach(var cl in client)
            {
               if (cl.Nombre==clientess)
    {
      
              idcliente = cl.Cliente_Id;
    }


            }

            
            
}


    void AgregarPfacturado(){

       foreach(var prop in product)
            {
           if(prop.Nombre == selected){
descr = prop.Descripcion;
money = prop.Precio;
}
            }
           
      
      pfacturado.Nombre = selected;
      pfacturado.Cantidad = canti;
      pfacturado.precio = money;
      pfacturado.Descripcion = descr;
      pfacturado.Id_Factura = idfact;
      ServiceProductoF.Create(pfacturado);
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("FacturaInfo");

    }

    
    

}